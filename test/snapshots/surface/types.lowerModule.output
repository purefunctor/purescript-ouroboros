{
  surface: {
    name: 'Main',
    exports: Nothing {},
    imports: [],
    declarations: [
      DeclarationValue {
        value0: { index: 0 },
        value1: 'var',
        value2: Just { value0: TypeVar { value0: { index: 0 }, value1: 'v' } },
        value3: []
      },
      DeclarationValue {
        value0: { index: 1 },
        value1: 'constructor',
        value2: Just {
          value0: TypeConstructor {
            value0: { index: 1 },
            value1: { moduleName: Nothing {}, name: 'Constructor' }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 2 },
        value1: 'wildcard',
        value2: Just { value0: TypeWildcard { value0: { index: 2 } } },
        value3: []
      },
      DeclarationValue {
        value0: { index: 3 },
        value1: 'hole',
        value2: Just {
          value0: TypeHole { value0: { index: 3 }, value1: 'hole' }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 4 },
        value1: 'string',
        value2: Just {
          value0: TypeString { value0: { index: 4 }, value1: 'string' }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 5 },
        value1: 'int',
        value2: Just {
          value0: TypeInt {
            value0: { index: 5 },
            value1: false,
            value2: SmallInt { value0: 0 }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 6 },
        value1: 'rowEmpty',
        value2: Just {
          value0: TypeRow {
            value0: { index: 6 },
            value1: { labels: [], tail: Nothing {} }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 7 },
        value1: 'rowSome',
        value2: Just {
          value0: TypeRow {
            value0: { index: 7 },
            value1: {
              labels: [
                Tuple {
                  value0: 'a',
                  value1: TypeConstructor {
                    value0: { index: 8 },
                    value1: { moduleName: Nothing {}, name: 'Int' }
                  }
                }
              ],
              tail: Nothing {}
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 8 },
        value1: 'rowTail',
        value2: Just {
          value0: TypeRow {
            value0: { index: 9 },
            value1: {
              labels: [
                Tuple {
                  value0: 'a',
                  value1: TypeConstructor {
                    value0: { index: 10 },
                    value1: { moduleName: Nothing {}, name: 'Int' }
                  }
                }
              ],
              tail: Just {
                value0: TypeVar { value0: { index: 11 }, value1: 't' }
              }
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 9 },
        value1: 'recordEmpty',
        value2: Just {
          value0: TypeRecord {
            value0: { index: 12 },
            value1: { labels: [], tail: Nothing {} }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 10 },
        value1: 'recordSome',
        value2: Just {
          value0: TypeRecord {
            value0: { index: 13 },
            value1: {
              labels: [
                Tuple {
                  value0: 'a',
                  value1: TypeConstructor {
                    value0: { index: 14 },
                    value1: { moduleName: Nothing {}, name: 'Int' }
                  }
                }
              ],
              tail: Nothing {}
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 11 },
        value1: 'recordTail',
        value2: Just {
          value0: TypeRecord {
            value0: { index: 15 },
            value1: {
              labels: [
                Tuple {
                  value0: 'a',
                  value1: TypeConstructor {
                    value0: { index: 16 },
                    value1: { moduleName: Nothing {}, name: 'Int' }
                  }
                }
              ],
              tail: Just {
                value0: TypeVar { value0: { index: 17 }, value1: 't' }
              }
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 12 },
        value1: 'polyType',
        value2: Just {
          value0: TypeForall {
            value0: { index: 18 },
            value1: [
              TypeVarName {
                value0: { index: 0 },
                value1: false,
                value2: 'a'
              },
              TypeVarName {
                value0: { index: 1 },
                value1: true,
                value2: 'b'
              },
              TypeVarKinded {
                value0: { index: 2 },
                value1: false,
                value2: 'c',
                value3: TypeConstructor {
                  value0: { index: 19 },
                  value1: { moduleName: Nothing {}, name: 'T' }
                }
              },
              TypeVarKinded {
                value0: { index: 3 },
                value1: true,
                value2: 'd',
                value3: TypeConstructor {
                  value0: { index: 20 },
                  value1: { moduleName: Nothing {}, name: 'T' }
                }
              }
            ],
            value2: TypeVar { value0: { index: 21 }, value1: 'a' }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 13 },
        value1: 'kinded',
        value2: Just {
          value0: TypeParens {
            value0: { index: 22 },
            value1: TypeKinded {
              value0: { index: 23 },
              value1: TypeConstructor {
                value0: { index: 24 },
                value1: { moduleName: Nothing {}, name: 'T' }
              },
              value2: TypeConstructor {
                value0: { index: 25 },
                value1: { moduleName: Nothing {}, name: 'K' }
              }
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 14 },
        value1: 'app',
        value2: Just {
          value0: TypeApp {
            value0: { index: 26 },
            value1: TypeConstructor {
              value0: { index: 27 },
              value1: { moduleName: Nothing {}, name: 'F' }
            },
            value2: [ TypeVar { value0: { index: 28 }, value1: 'a' } ]
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 15 },
        value1: 'op',
        value2: Just {
          value0: TypeOp {
            value0: { index: 29 },
            value1: TypeConstructor {
              value0: { index: 30 },
              value1: { moduleName: Nothing {}, name: 'A' }
            },
            value2: [
              Tuple {
                value0: { moduleName: Nothing {}, name: '+' },
                value1: TypeConstructor {
                  value0: { index: 31 },
                  value1: { moduleName: Nothing {}, name: 'B' }
                }
              },
              Tuple {
                value0: { moduleName: Nothing {}, name: '+' },
                value1: TypeConstructor {
                  value0: { index: 32 },
                  value1: { moduleName: Nothing {}, name: 'C' }
                }
              }
            ]
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 16 },
        value1: 'opName',
        value2: Just {
          value0: TypeOpName {
            value0: { index: 33 },
            value1: { moduleName: Nothing {}, name: '+' }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 17 },
        value1: 'arrow',
        value2: Just {
          value0: TypeArrow {
            value0: { index: 34 },
            value1: TypeVar { value0: { index: 35 }, value1: 'a' },
            value2: TypeVar { value0: { index: 36 }, value1: 'b' }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 18 },
        value1: 'arrowName',
        value2: Just { value0: TypeArrowName { value0: { index: 37 } } },
        value3: []
      },
      DeclarationValue {
        value0: { index: 19 },
        value1: 'constrained',
        value2: Just {
          value0: TypeConstrained {
            value0: { index: 38 },
            value1: TypeConstructor {
              value0: { index: 39 },
              value1: { moduleName: Nothing {}, name: 'C' }
            },
            value2: TypeConstructor {
              value0: { index: 40 },
              value1: { moduleName: Nothing {}, name: 'T' }
            }
          }
        },
        value3: []
      },
      DeclarationValue {
        value0: { index: 20 },
        value1: 'parens',
        value2: Just {
          value0: TypeParens {
            value0: { index: 41 },
            value1: TypeConstructor {
              value0: { index: 42 },
              value1: { moduleName: Nothing {}, name: 'T' }
            }
          }
        },
        value3: []
      }
    ]
  },
  sourceRanges: {
    expr: Map(0) {},
    binder: Map(0) {},
    type: Map(43) {
      0 => { start: { line: 2, column: 7 }, end: { line: 2, column: 8 } },
      1 => { start: { line: 3, column: 15 }, end: { line: 3, column: 26 } },
      2 => { start: { line: 4, column: 12 }, end: { line: 4, column: 13 } },
      3 => { start: { line: 5, column: 8 }, end: { line: 5, column: 13 } },
      4 => { start: { line: 6, column: 10 }, end: { line: 6, column: 18 } },
      5 => { start: { line: 7, column: 7 }, end: { line: 7, column: 8 } },
      6 => { start: { line: 8, column: 12 }, end: { line: 8, column: 14 } },
      7 => { start: { line: 9, column: 11 }, end: { line: 9, column: 23 } },
      8 => { start: { line: 9, column: 18 }, end: { line: 9, column: 21 } },
      9 => {
        start: { line: 10, column: 11 },
        end: { line: 10, column: 27 }
      },
      10 => {
        start: { line: 10, column: 18 },
        end: { line: 10, column: 21 }
      },
      11 => {
        start: { line: 10, column: 24 },
        end: { line: 10, column: 25 }
      },
      12 => {
        start: { line: 11, column: 15 },
        end: { line: 11, column: 17 }
      },
      13 => {
        start: { line: 12, column: 14 },
        end: { line: 12, column: 26 }
      },
      14 => {
        start: { line: 12, column: 21 },
        end: { line: 12, column: 24 }
      },
      15 => {
        start: { line: 13, column: 14 },
        end: { line: 13, column: 30 }
      },
      16 => {
        start: { line: 13, column: 21 },
        end: { line: 13, column: 24 }
      },
      17 => {
        start: { line: 13, column: 27 },
        end: { line: 13, column: 28 }
      },
      18 => {
        start: { line: 14, column: 12 },
        end: { line: 14, column: 45 }
      },
      19 => {
        start: { line: 14, column: 30 },
        end: { line: 14, column: 31 }
      },
      20 => {
        start: { line: 14, column: 40 },
        end: { line: 14, column: 41 }
      },
      21 => {
        start: { line: 14, column: 44 },
        end: { line: 14, column: 45 }
      },
      22 => {
        start: { line: 15, column: 10 },
        end: { line: 15, column: 18 }
      },
      23 => {
        start: { line: 15, column: 11 },
        end: { line: 15, column: 17 }
      },
      24 => {
        start: { line: 15, column: 11 },
        end: { line: 15, column: 12 }
      },
      25 => {
        start: { line: 15, column: 16 },
        end: { line: 15, column: 17 }
      },
      26 => { start: { line: 16, column: 7 }, end: { line: 16, column: 10 } },
      27 => { start: { line: 16, column: 7 }, end: { line: 16, column: 8 } },
      28 => { start: { line: 16, column: 9 }, end: { line: 16, column: 10 } },
      29 => { start: { line: 17, column: 6 }, end: { line: 17, column: 15 } },
      30 => { start: { line: 17, column: 6 }, end: { line: 17, column: 7 } },
      31 => {
        start: { line: 17, column: 10 },
        end: { line: 17, column: 11 }
      },
      32 => {
        start: { line: 17, column: 14 },
        end: { line: 17, column: 15 }
      },
      33 => {
        start: { line: 18, column: 10 },
        end: { line: 18, column: 13 }
      },
      34 => { start: { line: 19, column: 9 }, end: { line: 19, column: 15 } },
      35 => { start: { line: 19, column: 9 }, end: { line: 19, column: 10 } },
      36 => {
        start: { line: 19, column: 14 },
        end: { line: 19, column: 15 }
      },
      37 => {
        start: { line: 20, column: 13 },
        end: { line: 20, column: 17 }
      },
      38 => {
        start: { line: 21, column: 15 },
        end: { line: 21, column: 21 }
      },
      39 => {
        start: { line: 21, column: 15 },
        end: { line: 21, column: 16 }
      },
      40 => {
        start: { line: 21, column: 20 },
        end: { line: 21, column: 21 }
      },
      41 => {
        start: { line: 22, column: 10 },
        end: { line: 22, column: 13 }
      },
      42 => {
        start: { line: 22, column: 11 },
        end: { line: 22, column: 12 }
      }
    },
    doStatement: Map(0) {},
    letBinding: Map(0) {},
    declaration: Map(21) {
      0 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 2, column: 0 },
              end: { line: 2, column: 8 }
            }
          },
          definitions: []
        }
      },
      1 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 3, column: 0 },
              end: { line: 3, column: 26 }
            }
          },
          definitions: []
        }
      },
      2 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 4, column: 0 },
              end: { line: 4, column: 13 }
            }
          },
          definitions: []
        }
      },
      3 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 5, column: 0 },
              end: { line: 5, column: 13 }
            }
          },
          definitions: []
        }
      },
      4 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 6, column: 0 },
              end: { line: 6, column: 18 }
            }
          },
          definitions: []
        }
      },
      5 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 7, column: 0 },
              end: { line: 7, column: 8 }
            }
          },
          definitions: []
        }
      },
      6 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 8, column: 0 },
              end: { line: 8, column: 14 }
            }
          },
          definitions: []
        }
      },
      7 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 9, column: 0 },
              end: { line: 9, column: 23 }
            }
          },
          definitions: []
        }
      },
      8 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 10, column: 0 },
              end: { line: 10, column: 27 }
            }
          },
          definitions: []
        }
      },
      9 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 11, column: 0 },
              end: { line: 11, column: 17 }
            }
          },
          definitions: []
        }
      },
      10 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 12, column: 0 },
              end: { line: 12, column: 26 }
            }
          },
          definitions: []
        }
      },
      11 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 13, column: 0 },
              end: { line: 13, column: 30 }
            }
          },
          definitions: []
        }
      },
      12 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 14, column: 0 },
              end: { line: 14, column: 45 }
            }
          },
          definitions: []
        }
      },
      13 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 15, column: 0 },
              end: { line: 15, column: 18 }
            }
          },
          definitions: []
        }
      },
      14 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 16, column: 0 },
              end: { line: 16, column: 10 }
            }
          },
          definitions: []
        }
      },
      15 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 17, column: 0 },
              end: { line: 17, column: 15 }
            }
          },
          definitions: []
        }
      },
      16 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 18, column: 0 },
              end: { line: 18, column: 13 }
            }
          },
          definitions: []
        }
      },
      17 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 19, column: 0 },
              end: { line: 19, column: 15 }
            }
          },
          definitions: []
        }
      },
      18 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 20, column: 0 },
              end: { line: 20, column: 17 }
            }
          },
          definitions: []
        }
      },
      19 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 21, column: 0 },
              end: { line: 21, column: 21 }
            }
          },
          definitions: []
        }
      },
      20 => DeclarationValueSourceRange {
        value0: {
          signature: Just {
            value0: {
              start: { line: 22, column: 0 },
              end: { line: 22, column: 13 }
            }
          },
          definitions: []
        }
      }
    },
    constructor: Map(0) {},
    newtype: Map(0) {},
    classMethod: Map(0) {},
    typeVarBinding: Map(4) {
      0 => {
        start: { line: 14, column: 19 },
        end: { line: 14, column: 20 }
      },
      1 => {
        start: { line: 14, column: 21 },
        end: { line: 14, column: 23 }
      },
      2 => {
        start: { line: 14, column: 24 },
        end: { line: 14, column: 32 }
      },
      3 => {
        start: { line: 14, column: 33 },
        end: { line: 14, column: 42 }
      }
    }
  },
  errors: {
    expr: Map(0) {},
    binder: Map(0) {},
    type: Map(0) {},
    doStatement: Map(0) {},
    letBinding: Map(0) {},
    declaration: Map(0) {}
  }
}