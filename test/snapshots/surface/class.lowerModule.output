{
  surface: {
    name: 'Main',
    exports: Nothing {},
    imports: [],
    declarations: [
      DeclarationClass {
        value0: { id: 0 },
        value1: 'Empty',
        value2: Nothing {},
        value3: {
          variables: [
            TypeVarName {
              value0: { id: 0 },
              value1: false,
              value2: 'a'
            }
          ],
          methods: Nothing {}
        }
      },
      DeclarationClass {
        value0: { id: 1 },
        value1: 'Some',
        value2: Nothing {},
        value3: {
          variables: [
            TypeVarName {
              value0: { id: 1 },
              value1: false,
              value2: 'a'
            }
          ],
          methods: Just {
            value0: [
              {
                annotation: { id: 0 },
                name: 'some',
                signature: TypeArrow {
                  value0: { id: 0 },
                  value1: TypeVar { value0: { id: 1 }, value1: 'a' },
                  value2: TypeVar { value0: { id: 2 }, value1: 'a' }
                }
              }
            ]
          }
        }
      },
      DeclarationClass {
        value0: { id: 2 },
        value1: 'Kinded',
        value2: Just {
          value0: TypeArrow {
            value0: { id: 3 },
            value1: TypeConstructor {
              value0: { id: 4 },
              value1: { moduleName: Nothing {}, name: 'Type' }
            },
            value2: TypeConstructor {
              value0: { id: 5 },
              value1: { moduleName: Nothing {}, name: 'Constraint' }
            }
          }
        },
        value3: {
          variables: [
            TypeVarName {
              value0: { id: 2 },
              value1: false,
              value2: 'a'
            }
          ],
          methods: Nothing {}
        }
      }
    ]
  },
  sourceRanges: {
    expr: MapNode { datamap: 0, nodemap: 0, content: [] },
    binder: MapNode { datamap: 0, nodemap: 0, content: [] },
    type: MapNode {
      datamap: 63,
      nodemap: 0,
      content: [
        0,
        {
          start: { line: 5, column: 10 },
          end: { line: 5, column: 16 }
        },
        1,
        {
          start: { line: 5, column: 10 },
          end: { line: 5, column: 11 }
        },
        2,
        {
          start: { line: 5, column: 15 },
          end: { line: 5, column: 16 }
        },
        3,
        {
          start: { line: 7, column: 16 },
          end: { line: 7, column: 34 }
        },
        4,
        {
          start: { line: 7, column: 16 },
          end: { line: 7, column: 20 }
        },
        5,
        {
          start: { line: 7, column: 24 },
          end: { line: 7, column: 34 }
        }
      ]
    },
    doStatement: MapNode { datamap: 0, nodemap: 0, content: [] },
    letBinding: MapNode { datamap: 0, nodemap: 0, content: [] },
    declaration: MapNode {
      datamap: 7,
      nodemap: 0,
      content: [
        0,
        DeclarationValueSourceRange {
          value0: {
            signature: Nothing {},
            definitions: [
              {
                start: { line: 2, column: 0 },
                end: { line: 2, column: 13 }
              }
            ]
          }
        },
        1,
        DeclarationValueSourceRange {
          value0: {
            signature: Nothing {},
            definitions: [
              {
                start: { line: 4, column: 0 },
                end: { line: 5, column: 16 }
              }
            ]
          }
        },
        2,
        DeclarationValueSourceRange {
          value0: {
            signature: Just {
              value0: {
                start: { line: 7, column: 0 },
                end: { line: 7, column: 34 }
              }
            },
            definitions: [
              {
                start: { line: 8, column: 0 },
                end: { line: 8, column: 14 }
              }
            ]
          }
        }
      ]
    },
    constructor: MapNode { datamap: 0, nodemap: 0, content: [] },
    newtype: MapNode { datamap: 0, nodemap: 0, content: [] },
    classMethod: MapNode {
      datamap: 1,
      nodemap: 0,
      content: [
        0,
        { start: { line: 5, column: 2 }, end: { line: 5, column: 16 } }
      ]
    },
    typeVarBinding: MapNode {
      datamap: 7,
      nodemap: 0,
      content: [
        0,
        {
          start: { line: 2, column: 12 },
          end: { line: 2, column: 13 }
        },
        1,
        {
          start: { line: 4, column: 11 },
          end: { line: 4, column: 12 }
        },
        2,
        {
          start: { line: 8, column: 13 },
          end: { line: 8, column: 14 }
        }
      ]
    }
  },
  recoveredErrors: {
    expr: MapNode { datamap: 0, nodemap: 0, content: [] },
    binder: MapNode { datamap: 0, nodemap: 0, content: [] },
    type: MapNode { datamap: 0, nodemap: 0, content: [] },
    doStatement: MapNode { datamap: 0, nodemap: 0, content: [] },
    letBinding: MapNode { datamap: 0, nodemap: 0, content: [] },
    declaration: MapNode { datamap: 0, nodemap: 0, content: [] }
  }
}